# Generated by Django 4.2.6 on 2023-11-07 10:04

import uuid

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import members.models
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Member",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nickname", models.CharField(blank=True, max_length=200)),
                ("birth_date", models.DateField(blank=True, null=True)),
                ("liu_id", models.CharField(blank=True, max_length=8)),
                ("pronouns", models.CharField(blank=True, max_length=20)),
                ("street_address", models.CharField(blank=True, max_length=50)),
                ("postal_code", models.CharField(blank=True, max_length=10)),
                ("postal_town", models.CharField(blank=True, max_length=50)),
                ("postal_country", models.CharField(blank=True, max_length=50)),
                (
                    "phone_number_1",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None
                    ),
                ),
                (
                    "phone_number_2",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None
                    ),
                ),
                (
                    "phone_number_3",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None
                    ),
                ),
                ("arbitrary_text", models.TextField(blank=True)),
                ("national_id", models.CharField(blank=True, max_length=4)),
                (
                    "profile_picture",
                    imagekit.models.fields.ProcessedImageField(
                        blank=True,
                        default="avatars/placeholderImage_400x400.png",
                        upload_to=members.models.member_profile_picture_path,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="EngagementType",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="MembershipType",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("instrument", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Membership",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("start", models.DateTimeField(blank=True)),
                ("end", models.DateTimeField(blank=True)),
                ("has_trial", models.BooleanField()),
                ("trial_start", models.DateTimeField(blank=True, null=True)),
                (
                    "appointed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "instrument",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="members.membershiptype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Engagement",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("start", models.DateTimeField()),
                ("end", models.DateTimeField(blank=True)),
                (
                    "appointed",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "title",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="members.engagementtype",
                    ),
                ),
            ],
        ),
    ]
